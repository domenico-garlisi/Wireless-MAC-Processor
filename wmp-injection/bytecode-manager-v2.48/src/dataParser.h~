
#define ADDRESS_CONDITION_PROCEDURE  0x770

//settaggio indirizzi per la sezione che contiene i parametri di stato
//parametri bytecode

#define PARAMETER_ADDR_OFFSET_BYTECODE_1		0x0418
#define PARAMETER_ADDR_BYTECODE_1			0x0830
#define PARAMETER_ADDR_OFFSET_BYTECODE_2		0x0610
#define PARAMETER_ADDR_BYTECODE_2			0x0C20
#define LENGTH_PARAMETER_REGION				0x0028
		
//descrittori di stato
#define COMBINATION_ADDR_BYTECODE_1			PARAMETER_ADDR_BYTECODE_1 + (LENGTH_PARAMETER_REGION * 2)
#define COMBINATION_ADDR_BYTECODE_2			PARAMETER_ADDR_BYTECODE_2 + (LENGTH_PARAMETER_REGION * 2)
#define LENGTH_PARAMETER_AND_COMBINATION_REGION		0x01B8
	
	
//stati
#define STATE_ADDR_BYTECODE_1			( PARAMETER_ADDR_BYTECODE_1 + (LENGTH_PARAMETER_AND_COMBINATION_REGION * 2) )
#define STATE_ADDR_BYTECODE_2			( PARAMETER_ADDR_BYTECODE_2 + (LENGTH_PARAMETER_AND_COMBINATION_REGION * 2) )



#define GPR_CONTROL		55
#define GPR_BYTECODE_ADDRESS 	57
#define GPR_CURRENT_STATE	48

#define	SHM_RX_TIME_WORD3	0x078
#define	SHM_RX_TIME_WORD2	0x07A
#define SHM_RX_TIME_WORD1	0x07C
#define	SHM_RX_TIME_WORD0	0x07E

#define	REG_TIMER_DELAY_2	30
#define	REG_TIMER_DELAY_1	31

#define	TIMER_DELAY_2_TIME_OUT	 0x0500
#define	TIMER_DELAY_1_TIME_OUT	 0x0502
	
#define MIN_CONTENTION_WIN	6
#define MAX_CONTENTION_WIN	7
#define CUR_CONTENTION_WIN	8

#define	PROCEDURE_REGISTER_1	44
#define	PROCEDURE_REGISTER_2	46
	

#define PROCEDURE_MEMORY_1_HI 	0x0508
#define PROCEDURE_MEMORY_1_LO 	0x050A
#define PROCEDURE_MEMORY_2_HI 	0x050C
#define PROCEDURE_MEMORY_2_LO 	0x050E
#define PROCEDURE_MEMORY_3_HI 	0x0510
#define PROCEDURE_MEMORY_3_LO 	0x0512


void parser(struct debugfs_file * df, struct options * opt);
void load_params(struct debugfs_file * df, struct options * opt);

void bytecodeSharedWrite(struct debugfs_file * df, struct options * opt);
void putInWaitMode(struct debugfs_file * df);
void returnFromWaitMode(struct debugfs_file * df);

void setStartState(struct debugfs_file * df);
void writeAddressBytecode(struct debugfs_file * df, struct options * opt);
void activeBytecode(struct debugfs_file * df, struct options * opt);


void setTimer2(struct debugfs_file * df, struct options * opt);
int calculateDelay(struct debugfs_file * df, struct options * opt);
void setDelay(struct debugfs_file * df, struct options * opt);
void setDelayTimer(struct debugfs_file * df, struct options * opt);
void resetControl(struct debugfs_file * df);



